{"ast":null,"code":"var _jsxFileName = \"/home/agilepc99/Desktop/tutorial/react_table/src/components/PaginationTable.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useMemo } from \"react\";\nimport { useTable, usePagination } from \"react-table\";\nimport MOCK_DATA from \"./MOCK_DATA.json\";\nimport { COLUMNS } from \"./columns\";\nimport './basicTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaginationTable = () => {\n  _s();\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n    pageOptions,\n    state,\n    gotoPage,\n    pageCount,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, usePagination);\n  const {\n    pageIndex\n  } = state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children:\n        // Loop over the header rows\n        headerGroups.map(headerGroup =>\n        /*#__PURE__*/\n        // Apply the header row props\n        _jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children:\n          // Loop over the headers in each row\n          headerGroup.headers.map(column =>\n          /*#__PURE__*/\n          // Apply the header cell props\n          _jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            children:\n            // Render the header\n            column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children:\n        // Loop over the table rows\n        page.map(row => {\n          // Prepare the row for display\n          prepareRow(row);\n          return (\n            /*#__PURE__*/\n            // Apply the row props\n            _jsxDEV(\"tr\", {\n              ...row.getRowProps(),\n              children:\n              // Loop over the rows cells\n              row.cells.map(cell => {\n                // Apply the cell props\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  ...cell.getCellProps(),\n                  children:\n                  // Render the cell contents\n                  cell.render('Cell')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 49\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this)\n          );\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"page \", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [pageIndex + 1, \" of \", pageOptions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), \" \", ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"| Go to Page: \", ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          defaultValue: pageIndex + 1,\n          onChange: e => {\n            const pageNumber = e.target.value ? Number(e.target.value) - 1 : 0;\n            gotoPage(pageNumber);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => gotoPage(0),\n        disabled: !canPreviousPage,\n        children: '<<'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn1\",\n        onClick: () => previousPage(),\n        disabled: !canPreviousPage,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn2\",\n        onClick: () => nextPage(),\n        disabled: !canNextPage,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => gotoPage(pageCount - 1),\n        disabled: !canNextPage,\n        children: '>>'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(PaginationTable, \"r8Z9imfrpyDFUKGVNjgUDdbJmCI=\", false, function () {\n  return [useTable];\n});\n_c = PaginationTable;\nexport default PaginationTable;\nvar _c;\n$RefreshReg$(_c, \"PaginationTable\");","map":{"version":3,"names":["React","useMemo","useTable","usePagination","MOCK_DATA","COLUMNS","PaginationTable","columns","data","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","state","gotoPage","pageCount","prepareRow","pageIndex","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","length","e","pageNumber","target","value","Number"],"sources":["/home/agilepc99/Desktop/tutorial/react_table/src/components/PaginationTable.js"],"sourcesContent":["import React from \"react\";\nimport { useMemo } from \"react\";\nimport { useTable, usePagination } from \"react-table\";\nimport MOCK_DATA from \"./MOCK_DATA.json\"\nimport { COLUMNS } from \"./columns\"\nimport './basicTable.css'\n\nconst PaginationTable = () => {\n    const columns = useMemo(() => COLUMNS, [])\n    const data = useMemo(() => MOCK_DATA, [])\n\n    const { \n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        page,\n        nextPage,\n        previousPage,\n        canNextPage,\n        canPreviousPage,\n        pageOptions,\n        state,\n        gotoPage,\n        pageCount,\n        prepareRow } = useTable({\n            columns,\n            data,\n    \n        }, usePagination)\n\n    const {pageIndex} = state\n\n    return (\n        <div>\n            <table {...getTableProps()}>\n                <thead>\n                    {// Loop over the header rows\n                        headerGroups.map(headerGroup => (\n                            // Apply the header row props\n                            <tr {...headerGroup.getHeaderGroupProps()}>\n                                {// Loop over the headers in each row\n                                    headerGroup.headers.map(column => (\n                                        // Apply the header cell props\n                                        <th {...column.getHeaderProps()}>\n                                            {// Render the header\n                                                column.render('Header')}\n                                        </th>\n                                    ))}\n                            </tr>\n                        ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                    {// Loop over the table rows\n                        page.map(row => {\n                            // Prepare the row for display\n                            prepareRow(row)\n                            return (\n                                // Apply the row props\n                                <tr {...row.getRowProps()}>\n                                    {// Loop over the rows cells\n                                        row.cells.map(cell => {\n                                            // Apply the cell props\n                                            return (\n                                                <td {...cell.getCellProps()}>\n                                                    {// Render the cell contents\n                                                        cell.render('Cell')}\n                                                </td>\n                                            )\n                                        })}\n                                </tr>\n                            )\n                        })}\n                </tbody>\n            </table>\n            <div>\n                <span>\n                    page {' '}\n                    <strong>{pageIndex + 1} of {pageOptions.length}</strong> {' '}\n                </span>\n                <span>\n                    | Go to Page: { ' '}\n                    <input type='number' defaultValue ={pageIndex + 1}\n                    onChange={e =>{\n                        const pageNumber = e.target.value ? Number(e.target.value) - 1 : 0\n                        gotoPage(pageNumber)\n                    }}></input>\n                </span>\n                <button onClick={() => gotoPage(0)} disabled= {!canPreviousPage}>{'<<'}</button>\n                <button className=\"btn1\" onClick={() => previousPage()} disabled= {!canPreviousPage}>Previous</button>\n                <button className=\"btn2\" onClick={() => nextPage()} disabled={!canNextPage}>Next</button>\n                <button onClick={() => gotoPage(pageCount - 1)} disabled= {!canNextPage}>{'>>'}</button>\n            </div>\n        </div>\n    )\n}\nexport default PaginationTable;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}