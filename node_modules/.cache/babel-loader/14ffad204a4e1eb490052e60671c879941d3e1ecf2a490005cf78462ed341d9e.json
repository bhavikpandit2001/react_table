{"ast":null,"code":"var _jsxFileName = \"/home/agilepc99/Desktop/tutorial/react_table/src/components/Example.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useMemo } from \"react\";\nimport { useTable } from \"react-table\";\nimport TableData from \"./TableData.json\";\nimport { exColumns } from \"./exColumns\";\nimport './basicTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Example = () => {\n  _s();\n  const columns = useMemo(() => exColumns, []);\n  const data = useMemo(() => TableData, []);\n  const tableInstance = useTable({\n    columns,\n    data\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children:\n      // Loop over the header rows\n      headerGroups.map(headerGroup =>\n      /*#__PURE__*/\n      // Apply the header row props\n      _jsxDEV(\"tr\", {\n        ...headerGroup.getHeaderGroupProps(),\n        children:\n        // Loop over the headers in each row\n        headerGroup.headers.map(column =>\n        /*#__PURE__*/\n        // Apply the header cell props\n        _jsxDEV(\"th\", {\n          ...column.getHeaderProps(),\n          children:\n          // Render the header\n          column.render('Header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 37\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      ...getTableBodyProps(),\n      children:\n      // Loop over the table rows\n      rows.map(row => {\n        // Prepare the row for display\n        prepareRow(row);\n        return (\n          /*#__PURE__*/\n          // Apply the row props\n          _jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children:\n            // Loop over the rows cells\n            row.cells.map(cell => {\n              // Apply the cell props\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                children:\n                // Render the cell contents\n                cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)\n        );\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(Example, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n  return [useTable];\n});\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["React","useMemo","useTable","TableData","exColumns","Example","columns","data","tableInstance","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps"],"sources":["/home/agilepc99/Desktop/tutorial/react_table/src/components/Example.js"],"sourcesContent":["import React from \"react\";\nimport { useMemo } from \"react\";\nimport { useTable } from \"react-table\";\nimport TableData from \"./TableData.json\"\nimport { exColumns } from \"./exColumns\"\nimport './basicTable.css'\n\n\nconst Example = () => {\n    const columns = useMemo(() => exColumns, [])\n    const data = useMemo(() => TableData, [])\n    \n    const tableInstance = useTable({\n        columns,\n        data,\n        \n    })\n    const { getTableProps, getTableBodyProps, headerGroups,footerGroups, rows, prepareRow } = tableInstance\n\n    return (\n        <table {...getTableProps()}>\n            <thead>\n                {// Loop over the header rows\n                    headerGroups.map(headerGroup => (\n                        // Apply the header row props\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {// Loop over the headers in each row\n                                headerGroup.headers.map(column => (\n                                    // Apply the header cell props\n                                    <th {...column.getHeaderProps()}>\n                                        {// Render the header\n                                            column.render('Header')}\n                                    </th>\n                                ))}\n                        </tr>\n                    ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {// Loop over the table rows\n                    rows.map(row => {\n                        // Prepare the row for display\n                        prepareRow(row)\n                        return (\n                            // Apply the row props\n                            <tr {...row.getRowProps()}>\n                                {// Loop over the rows cells\n                                    row.cells.map(cell => {\n                                        // Apply the cell props\n                                        return (\n                                            <td {...cell.getCellProps()}>\n                                                {// Render the cell contents\n                                                    cell.render('Cell')}\n                                            </td>\n                                        )})}\n                            </tr>\n                        )})}\n            </tbody>\n            \n        </table>\n    )\n}\nexport default Example;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,SAAS,MAAM,kBAAkB;AACxC,SAASC,SAAS,QAAQ,aAAa;AACvC,OAAO,kBAAkB;AAAA;AAGzB,MAAMC,OAAO,GAAG,MAAM;EAAA;EAClB,MAAMC,OAAO,GAAGL,OAAO,CAAC,MAAMG,SAAS,EAAE,EAAE,CAAC;EAC5C,MAAMG,IAAI,GAAGN,OAAO,CAAC,MAAME,SAAS,EAAE,EAAE,CAAC;EAEzC,MAAMK,aAAa,GAAGN,QAAQ,CAAC;IAC3BI,OAAO;IACPC;EAEJ,CAAC,CAAC;EACF,MAAM;IAAEE,aAAa;IAAEC,iBAAiB;IAAEC,YAAY;IAACC,YAAY;IAAEC,IAAI;IAAEC;EAAW,CAAC,GAAGN,aAAa;EAEvG,oBACI;IAAA,GAAWC,aAAa,EAAE;IAAA,wBACtB;MAAA;MACK;MACGE,YAAY,CAACI,GAAG,CAACC,WAAW;MAAA;MACxB;MACA;QAAA,GAAQA,WAAW,CAACC,mBAAmB,EAAE;QAAA;QACpC;QACGD,WAAW,CAACE,OAAO,CAACH,GAAG,CAACI,MAAM;QAAA;QAC1B;QACA;UAAA,GAAQA,MAAM,CAACC,cAAc,EAAE;UAAA;UAC1B;UACGD,MAAM,CAACE,MAAM,CAAC,QAAQ;QAAC;UAAA;UAAA;UAAA;QAAA,QAElC;MAAC;QAAA;QAAA;QAAA;MAAA,QAEb;IAAC;MAAA;MAAA;MAAA;IAAA,QACF,eACR;MAAA,GAAWX,iBAAiB,EAAE;MAAA;MACzB;MACGG,IAAI,CAACE,GAAG,CAACO,GAAG,IAAI;QACZ;QACAR,UAAU,CAACQ,GAAG,CAAC;QACf;UAAA;UACI;UACA;YAAA,GAAQA,GAAG,CAACC,WAAW,EAAE;YAAA;YACpB;YACGD,GAAG,CAACE,KAAK,CAACT,GAAG,CAACU,IAAI,IAAI;cAClB;cACA,oBACI;gBAAA,GAAQA,IAAI,CAACC,YAAY,EAAE;gBAAA;gBACtB;gBACGD,IAAI,CAACJ,MAAM,CAAC,MAAM;cAAC;gBAAA;gBAAA;gBAAA;cAAA,QACtB;YACR,CAAC;UAAC;YAAA;YAAA;YAAA;UAAA;QACV;MACR,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACP;EAAA;IAAA;IAAA;IAAA;EAAA,QAEJ;AAEhB,CAAC;AAAA,GApDKhB,OAAO;EAAA,QAIaH,QAAQ;AAAA;AAAA,KAJ5BG,OAAO;AAqDb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}