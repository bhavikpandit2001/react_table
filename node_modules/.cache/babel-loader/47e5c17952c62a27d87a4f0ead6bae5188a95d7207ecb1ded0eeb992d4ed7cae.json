{"ast":null,"code":"var _jsxFileName = \"/home/agilepc99/Desktop/tutorial/react_table/src/components/RowSelection.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useMemo } from \"react\";\nimport { useTable, useRowSelect } from \"react-table\";\nimport MOCK_DATA from \"./MOCK_DATA.json\";\nimport { COLUMNS } from \"./columns\";\nimport './basicTable.css';\nimport { Checkbox } from \"./Checkbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RowSelection = () => {\n  _s();\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow,\n    selectedFlatRows\n  } = useTable({\n    columns,\n    data\n  }, useRowSelect, hooks => {\n    hooks.visibleColumns.push(columns => {\n      return [{\n        id: \"selection\",\n        Header: _ref => {\n          let {\n            getToggleAllRowsSelectedProps\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(Checkbox, {\n            ...getToggleAllRowsSelectedProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 37\n          }, this);\n        },\n        cell: _ref2 => {\n          let {\n            row\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(Checkbox, {\n            ...row.getToggleRowSelectedProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 37\n          }, this);\n        }\n      }, ...columns];\n    });\n  });\n  const firstPageRows = rows.slice(0, 10);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children:\n        // Loop over the header rows\n        headerGroups.map(headerGroup =>\n        /*#__PURE__*/\n        // Apply the header row props\n        _jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children:\n          // Loop over the headers in each row\n          headerGroup.headers.map(column =>\n          /*#__PURE__*/\n          // Apply the header cell props\n          _jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            children:\n            // Render the header\n            column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children:\n        // Loop over the table rows\n        firstPageRows.map(row => {\n          // Prepare the row for display\n          prepareRow(row);\n          return (\n            /*#__PURE__*/\n            // Apply the row props\n            _jsxDEV(\"tr\", {\n              ...row.getRowProps(),\n              children:\n              // Loop over the rows cells\n              row.cells.map(cell => {\n                // Apply the cell props\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  ...cell.getCellProps(),\n                  children:\n                  // Render the cell contents\n                  cell.render('Cell')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 49\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this)\n          );\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n        children: footerGroups.map(footerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...footerGroup.getFooterGroupProps(),\n          children: footerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"td\", {\n            ...column.getFooterProps(),\n            children: column.render(\"Footer\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: /*#__PURE__*/_jsxDEV(\"code\", {\n        children: JSON.stringify({\n          'selectedFlatRows[].original': selectedFlatRows.map(d => d.original)\n        }, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(RowSelection, \"r1Bz402S/Fq0ZWcL6z3dBGHcmzU=\", false, function () {\n  return [useTable];\n});\n_c = RowSelection;\nexport default RowSelection;\nvar _c;\n$RefreshReg$(_c, \"RowSelection\");","map":{"version":3,"names":["React","useMemo","useTable","useRowSelect","MOCK_DATA","COLUMNS","Checkbox","RowSelection","columns","data","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","selectedFlatRows","hooks","visibleColumns","push","id","Header","getToggleAllRowsSelectedProps","cell","row","getToggleRowSelectedProps","firstPageRows","slice","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","getRowProps","cells","getCellProps","footerGroup","getFooterGroupProps","getFooterProps","JSON","stringify","d","original"],"sources":["/home/agilepc99/Desktop/tutorial/react_table/src/components/RowSelection.js"],"sourcesContent":["import React from \"react\";\nimport { useMemo } from \"react\";\nimport { useTable, useRowSelect } from \"react-table\";\nimport MOCK_DATA from \"./MOCK_DATA.json\"\nimport { COLUMNS } from \"./columns\"\nimport './basicTable.css';\nimport { Checkbox } from \"./Checkbox\";\n\nconst RowSelection = () => {\n    const columns = useMemo(() => COLUMNS, [])\n    const data = useMemo(() => MOCK_DATA, [])\n\n    const { getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        footerGroups,\n        rows,\n        prepareRow,\n        selectedFlatRows } = useTable\n            ({\n                columns,\n                data,\n            }, useRowSelect,\n                (hooks) => {\n                    hooks.visibleColumns.push((columns) => {\n                        return [\n                            {\n                                id: \"selection\",\n                                Header: ({ getToggleAllRowsSelectedProps }) => (\n                                    <Checkbox {...getToggleAllRowsSelectedProps()} />\n                                ),\n                                cell: ({ row }) => (\n                                    <Checkbox {...row.getToggleRowSelectedProps()} />\n                                )\n                            },\n                            ...columns\n                        ]\n                    })\n                })\n\n    const firstPageRows = rows.slice(0, 10)\n\n    return (\n        <div>\n            <table {...getTableProps()}>\n                <thead>\n                    {// Loop over the header rows\n                        headerGroups.map(headerGroup => (\n                            // Apply the header row props\n                            <tr {...headerGroup.getHeaderGroupProps()}>\n                                {// Loop over the headers in each row\n                                    headerGroup.headers.map(column => (\n                                        // Apply the header cell props\n                                        <th {...column.getHeaderProps()}>\n                                            {// Render the header\n                                                column.render('Header')}\n                                        </th>\n                                    ))}\n                            </tr>\n                        ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                    {// Loop over the table rows\n                        firstPageRows.map(row => {\n                            // Prepare the row for display\n                            prepareRow(row)\n                            return (\n                                // Apply the row props\n                                <tr {...row.getRowProps()}>\n                                    {// Loop over the rows cells\n                                        row.cells.map(cell => {\n                                            // Apply the cell props\n                                            return (\n                                                <td {...cell.getCellProps()}>\n                                                    {// Render the cell contents\n                                                        cell.render('Cell')}\n                                                </td>\n                                            )\n                                        })}\n                                </tr>\n                            )\n                        })}\n                </tbody>\n                <tfoot>\n                    {\n                        footerGroups.map(footerGroup => (\n                            <tr {...footerGroup.getFooterGroupProps()}>\n                                {\n                                    footerGroup.headers.map(column => (\n                                        <td {...column.getFooterProps()}>\n                                            {\n                                                column.render(\"Footer\")\n                                            }\n                                        </td>\n                                    ))\n                                }\n                            </tr>\n                        ))\n                    }\n                </tfoot>\n            </table>\n            <pre>\n                <code>\n                    {JSON.stringify(\n                        {\n\n                            'selectedFlatRows[].original': selectedFlatRows.map(\n                                d => d.original\n                            ),\n                        },\n                        null,\n                        2\n                    )}\n                </code>\n            </pre>\n        </div>\n    )\n}\nexport default RowSelection;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}