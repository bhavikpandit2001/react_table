{"ast":null,"code":"var _jsxFileName = \"/home/agilepc99/Desktop/tutorial/react_table/src/components/PaginationTable.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useMemo } from \"react\";\nimport { useTable, usePagination } from \"react-table\";\nimport MOCK_DATA from \"./MOCK_DATA.json\";\nimport { COLUMNS } from \"./columns\";\nimport './basicTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaginationTable = () => {\n  _s();\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n  const tableInstance = useTable({\n    columns,\n    data\n  }, usePagination);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    nextpage,\n    previouspage,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children:\n        // Loop over the header rows\n        headerGroups.map(headerGroup =>\n        /*#__PURE__*/\n        // Apply the header row props\n        _jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children:\n          // Loop over the headers in each row\n          headerGroup.headers.map(column =>\n          /*#__PURE__*/\n          // Apply the header cell props\n          _jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            children:\n            // Render the header\n            column.render('Header')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children:\n        // Loop over the table rows\n        page.map(row => {\n          // Prepare the row for display\n          prepareRow(row);\n          return (\n            /*#__PURE__*/\n            // Apply the row props\n            _jsxDEV(\"tr\", {\n              ...row.getRowProps(),\n              children:\n              // Loop over the rows cells\n              row.cells.map(cell => {\n                // Apply the cell props\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  ...cell.getCellProps(),\n                  children:\n                  // Render the cell contents\n                  cell.render('Cell')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 49\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this)\n          );\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_s(PaginationTable, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n  return [useTable];\n});\n_c = PaginationTable;\nexport default PaginationTable;\nvar _c;\n$RefreshReg$(_c, \"PaginationTable\");","map":{"version":3,"names":["React","useMemo","useTable","usePagination","MOCK_DATA","COLUMNS","PaginationTable","columns","data","tableInstance","getTableProps","getTableBodyProps","headerGroups","page","nextpage","previouspage","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps"],"sources":["/home/agilepc99/Desktop/tutorial/react_table/src/components/PaginationTable.js"],"sourcesContent":["import React from \"react\";\nimport { useMemo } from \"react\";\nimport { useTable, usePagination } from \"react-table\";\nimport MOCK_DATA from \"./MOCK_DATA.json\"\nimport { COLUMNS } from \"./columns\"\nimport './basicTable.css'\n\nconst PaginationTable = () => {\n    const columns = useMemo(() => COLUMNS, [])\n    const data = useMemo(() => MOCK_DATA, [])\n\n    const tableInstance = useTable({\n        columns,\n        data,\n\n    }, usePagination)\n    const { getTableProps, getTableBodyProps, headerGroups, page, nextpage, previouspage, prepareRow } = tableInstance\n\n    return (\n        <div>\n            <table {...getTableProps()}>\n                <thead>\n                    {// Loop over the header rows\n                        headerGroups.map(headerGroup => (\n                            // Apply the header row props\n                            <tr {...headerGroup.getHeaderGroupProps()}>\n                                {// Loop over the headers in each row\n                                    headerGroup.headers.map(column => (\n                                        // Apply the header cell props\n                                        <th {...column.getHeaderProps()}>\n                                            {// Render the header\n                                                column.render('Header')}\n                                        </th>\n                                    ))}\n                            </tr>\n                        ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                    {// Loop over the table rows\n                        page.map(row => {\n                            // Prepare the row for display\n                            prepareRow(row)\n                            return (\n                                // Apply the row props\n                                <tr {...row.getRowProps()}>\n                                    {// Loop over the rows cells\n                                        row.cells.map(cell => {\n                                            // Apply the cell props\n                                            return (\n                                                <td {...cell.getCellProps()}>\n                                                    {// Render the cell contents\n                                                        cell.render('Cell')}\n                                                </td>\n                                            )\n                                        })}\n                                </tr>\n                            )\n                        })}\n                </tbody>\n            </table>\n            <div>\n\n            </div>\n        </div>\n    )\n}\nexport default PaginationTable;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,QAAQ,EAAEC,aAAa,QAAQ,aAAa;AACrD,OAAOC,SAAS,MAAM,kBAAkB;AACxC,SAASC,OAAO,QAAQ,WAAW;AACnC,OAAO,kBAAkB;AAAA;AAEzB,MAAMC,eAAe,GAAG,MAAM;EAAA;EAC1B,MAAMC,OAAO,GAAGN,OAAO,CAAC,MAAMI,OAAO,EAAE,EAAE,CAAC;EAC1C,MAAMG,IAAI,GAAGP,OAAO,CAAC,MAAMG,SAAS,EAAE,EAAE,CAAC;EAEzC,MAAMK,aAAa,GAAGP,QAAQ,CAAC;IAC3BK,OAAO;IACPC;EAEJ,CAAC,EAAEL,aAAa,CAAC;EACjB,MAAM;IAAEO,aAAa;IAAEC,iBAAiB;IAAEC,YAAY;IAAEC,IAAI;IAAEC,QAAQ;IAAEC,YAAY;IAAEC;EAAW,CAAC,GAAGP,aAAa;EAElH,oBACI;IAAA,wBACI;MAAA,GAAWC,aAAa,EAAE;MAAA,wBACtB;QAAA;QACK;QACGE,YAAY,CAACK,GAAG,CAACC,WAAW;QAAA;QACxB;QACA;UAAA,GAAQA,WAAW,CAACC,mBAAmB,EAAE;UAAA;UACpC;UACGD,WAAW,CAACE,OAAO,CAACH,GAAG,CAACI,MAAM;UAAA;UAC1B;UACA;YAAA,GAAQA,MAAM,CAACC,cAAc,EAAE;YAAA;YAC1B;YACGD,MAAM,CAACE,MAAM,CAAC,QAAQ;UAAC;YAAA;YAAA;YAAA;UAAA,QAElC;QAAC;UAAA;UAAA;UAAA;QAAA,QAEb;MAAC;QAAA;QAAA;QAAA;MAAA,QACF,eACR;QAAA,GAAWZ,iBAAiB,EAAE;QAAA;QACzB;QACGE,IAAI,CAACI,GAAG,CAACO,GAAG,IAAI;UACZ;UACAR,UAAU,CAACQ,GAAG,CAAC;UACf;YAAA;YACI;YACA;cAAA,GAAQA,GAAG,CAACC,WAAW,EAAE;cAAA;cACpB;cACGD,GAAG,CAACE,KAAK,CAACT,GAAG,CAACU,IAAI,IAAI;gBAClB;gBACA,oBACI;kBAAA,GAAQA,IAAI,CAACC,YAAY,EAAE;kBAAA;kBACtB;kBACGD,IAAI,CAACJ,MAAM,CAAC,MAAM;gBAAC;kBAAA;kBAAA;kBAAA;gBAAA,QACtB;cAEb,CAAC;YAAC;cAAA;cAAA;cAAA;YAAA;UACL;QAEb,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACF;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ,eACR;MAAA;MAAA;MAAA;IAAA,QAEM;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,GA1DKjB,eAAe;EAAA,QAIKJ,QAAQ;AAAA;AAAA,KAJ5BI,eAAe;AA2DrB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}