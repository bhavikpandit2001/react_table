{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.checkErrors = columns => {\n  const hasGroups = !!columns.find(column => column.parent);\n  const stickyColumnsWithoutGroup = columns.filter(column => column.sticky && !column.parent).map(_ref => {\n    let {\n      Header\n    } = _ref;\n    return `'${Header}'`;\n  });\n  if (hasGroups && stickyColumnsWithoutGroup.length) {\n    throw new Error(`WARNING react-table-sticky:\n      \\nYour ReactTable has group and sticky columns outside groups, and that will break UI.\n      \\nYou must place ${stickyColumnsWithoutGroup.join(' and ')} columns into a group (even a group with an empty Header label)\\n`);\n  }\n  const bugWithUnderColumnsSticky = columns.find(parentCol => !parentCol.sticky && parentCol.columns && parentCol.columns.find(col => col.sticky));\n  if (!bugWithUnderColumnsSticky) return;\n  // @ts-ignore\n  const childBugs = bugWithUnderColumnsSticky.columns.find(_ref2 => {\n    let {\n      sticky\n    } = _ref2;\n    return sticky;\n  });\n  if (!childBugs) return;\n  throw new Error(`WARNING react-table-sticky:\n    \\nYour ReactTable contain columns group with at least one child columns sticky.\n    \\nWhen ReactTable has columns groups, only columns groups can be sticky\n    \\nYou must set sticky: 'left' | 'right' for the '${bugWithUnderColumnsSticky.Header}'\n    column, or remove the sticky property of '${childBugs.Header}' column.`);\n};\nfunction getStickyValue(column) {\n  if (column.sticky === 'left' || column.sticky === 'right') {\n    return column.sticky;\n  }\n  if (column.parent) {\n    return getStickyValue(column.parent);\n  }\n  return null;\n}\nexports.getStickyValue = getStickyValue;\nfunction columnIsLastLeftSticky(columnId, columns) {\n  const index = columns.findIndex(_ref3 => {\n    let {\n      id\n    } = _ref3;\n    return id === columnId;\n  });\n  const column = columns[index];\n  const nextColumn = columns[index + 1];\n  const columnIsLeftSticky = getStickyValue(column) === 'left';\n  const nextColumnIsLeftSticky = nextColumn && getStickyValue(nextColumn) === 'left';\n  return columnIsLeftSticky && !nextColumnIsLeftSticky;\n}\nexports.columnIsLastLeftSticky = columnIsLastLeftSticky;\nfunction columnIsFirstRightSticky(columnId, columns) {\n  const index = columns.findIndex(_ref4 => {\n    let {\n      id\n    } = _ref4;\n    return id === columnId;\n  });\n  const column = columns[index];\n  const prevColumn = columns[index - 1];\n  const columnIsRightSticky = getStickyValue(column) === 'right';\n  const prevColumnIsRightSticky = prevColumn && getStickyValue(prevColumn) === 'right';\n  return columnIsRightSticky && !prevColumnIsRightSticky;\n}\nexports.columnIsFirstRightSticky = columnIsFirstRightSticky;\nfunction getMarginRight(columnId, columns) {\n  const currentIndex = columns.findIndex(_ref5 => {\n    let {\n      id\n    } = _ref5;\n    return id === columnId;\n  });\n  let rightMargin = 0;\n  for (let i = currentIndex + 1; i < columns.length; i += 1) {\n    if (columns[i].isVisible !== false) {\n      rightMargin += columns[i].width;\n    }\n  }\n  return rightMargin;\n}\nexports.getMarginRight = getMarginRight;\nconst cellStylesSticky = {\n  // hard coded inline style will be remove in the next major release\n  position: 'sticky',\n  zIndex: 3\n};\nfunction findHeadersSameLevel(header, headers) {\n  return headers.filter(flatHeaderItem => {\n    return flatHeaderItem.depth === header.depth;\n  });\n}\nfunction getStickyProps(header, instance) {\n  let style = {};\n  const dataAttrs = {};\n  exports.checkErrors(instance.columns);\n  const sticky = getStickyValue(header);\n  if (sticky) {\n    style = Object.assign({}, cellStylesSticky);\n    // @ts-ignore\n    dataAttrs['data-sticky-td'] = true;\n    const headers = findHeadersSameLevel(header, instance.flatHeaders);\n    const margin = sticky === 'left' ? header.totalLeft : getMarginRight(header.id, headers);\n    style = Object.assign(Object.assign({}, style), {\n      [sticky]: `${margin}px`\n    });\n    const isLastLeftSticky = columnIsLastLeftSticky(header.id, headers);\n    if (isLastLeftSticky) {\n      // @ts-ignore\n      dataAttrs['data-sticky-last-left-td'] = true;\n    }\n    const isFirstRightSticky = columnIsFirstRightSticky(header.id, headers);\n    if (isFirstRightSticky) {\n      // @ts-ignore\n      dataAttrs['data-sticky-first-right-td'] = true;\n    }\n  }\n  return Object.assign({\n    style\n  }, dataAttrs);\n}\nexports.useSticky = hooks => {\n  hooks.getHeaderProps.push((props, _ref6) => {\n    let {\n      instance,\n      column\n    } = _ref6;\n    const nextProps = getStickyProps(column, instance);\n    return [props, nextProps];\n  });\n  hooks.getCellProps.push((props, _ref7) => {\n    let {\n      instance,\n      cell\n    } = _ref7;\n    const nextProps = getStickyProps(cell.column, instance);\n    return [props, nextProps];\n  });\n};\nexports.useSticky.pluginName = 'useSticky';","map":{"version":3,"names":["Object","defineProperty","exports","value","checkErrors","columns","hasGroups","find","column","parent","stickyColumnsWithoutGroup","filter","sticky","map","Header","length","Error","join","bugWithUnderColumnsSticky","parentCol","col","childBugs","getStickyValue","columnIsLastLeftSticky","columnId","index","findIndex","id","nextColumn","columnIsLeftSticky","nextColumnIsLeftSticky","columnIsFirstRightSticky","prevColumn","columnIsRightSticky","prevColumnIsRightSticky","getMarginRight","currentIndex","rightMargin","i","isVisible","width","cellStylesSticky","position","zIndex","findHeadersSameLevel","header","headers","flatHeaderItem","depth","getStickyProps","instance","style","dataAttrs","assign","flatHeaders","margin","totalLeft","isLastLeftSticky","isFirstRightSticky","useSticky","hooks","getHeaderProps","push","props","nextProps","getCellProps","cell","pluginName"],"sources":["/home/agilepc99/Desktop/tutorial/react_table/node_modules/react-table-sticky/build/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkErrors = (columns) => {\n    const hasGroups = !!columns.find((column) => column.parent);\n    const stickyColumnsWithoutGroup = columns.filter((column) => column.sticky && !column.parent).map(({ Header }) => `'${Header}'`);\n    if (hasGroups && stickyColumnsWithoutGroup.length) {\n        throw new Error(`WARNING react-table-sticky:\n      \\nYour ReactTable has group and sticky columns outside groups, and that will break UI.\n      \\nYou must place ${stickyColumnsWithoutGroup.join(' and ')} columns into a group (even a group with an empty Header label)\\n`);\n    }\n    const bugWithUnderColumnsSticky = columns.find((parentCol) => !parentCol.sticky && parentCol.columns && parentCol.columns.find((col) => col.sticky));\n    if (!bugWithUnderColumnsSticky)\n        return;\n    // @ts-ignore\n    const childBugs = bugWithUnderColumnsSticky.columns.find(({ sticky }) => sticky);\n    if (!childBugs)\n        return;\n    throw new Error(`WARNING react-table-sticky:\n    \\nYour ReactTable contain columns group with at least one child columns sticky.\n    \\nWhen ReactTable has columns groups, only columns groups can be sticky\n    \\nYou must set sticky: 'left' | 'right' for the '${bugWithUnderColumnsSticky.Header}'\n    column, or remove the sticky property of '${childBugs.Header}' column.`);\n};\nfunction getStickyValue(column) {\n    if (column.sticky === 'left' || column.sticky === 'right') {\n        return column.sticky;\n    }\n    if (column.parent) {\n        return getStickyValue(column.parent);\n    }\n    return null;\n}\nexports.getStickyValue = getStickyValue;\nfunction columnIsLastLeftSticky(columnId, columns) {\n    const index = columns.findIndex(({ id }) => id === columnId);\n    const column = columns[index];\n    const nextColumn = columns[index + 1];\n    const columnIsLeftSticky = getStickyValue(column) === 'left';\n    const nextColumnIsLeftSticky = nextColumn && getStickyValue(nextColumn) === 'left';\n    return columnIsLeftSticky && !nextColumnIsLeftSticky;\n}\nexports.columnIsLastLeftSticky = columnIsLastLeftSticky;\nfunction columnIsFirstRightSticky(columnId, columns) {\n    const index = columns.findIndex(({ id }) => id === columnId);\n    const column = columns[index];\n    const prevColumn = columns[index - 1];\n    const columnIsRightSticky = getStickyValue(column) === 'right';\n    const prevColumnIsRightSticky = prevColumn && getStickyValue(prevColumn) === 'right';\n    return columnIsRightSticky && !prevColumnIsRightSticky;\n}\nexports.columnIsFirstRightSticky = columnIsFirstRightSticky;\nfunction getMarginRight(columnId, columns) {\n    const currentIndex = columns.findIndex(({ id }) => id === columnId);\n    let rightMargin = 0;\n    for (let i = currentIndex + 1; i < columns.length; i += 1) {\n        if (columns[i].isVisible !== false) {\n            rightMargin += columns[i].width;\n        }\n    }\n    return rightMargin;\n}\nexports.getMarginRight = getMarginRight;\nconst cellStylesSticky = {\n    // hard coded inline style will be remove in the next major release\n    position: 'sticky',\n    zIndex: 3,\n};\nfunction findHeadersSameLevel(header, headers) {\n    return headers.filter((flatHeaderItem) => {\n        return flatHeaderItem.depth === header.depth;\n    });\n}\nfunction getStickyProps(header, instance) {\n    let style = {};\n    const dataAttrs = {};\n    exports.checkErrors(instance.columns);\n    const sticky = getStickyValue(header);\n    if (sticky) {\n        style = Object.assign({}, cellStylesSticky);\n        // @ts-ignore\n        dataAttrs['data-sticky-td'] = true;\n        const headers = findHeadersSameLevel(header, instance.flatHeaders);\n        const margin = sticky === 'left'\n            ? header.totalLeft\n            : getMarginRight(header.id, headers);\n        style = Object.assign(Object.assign({}, style), { [sticky]: `${margin}px` });\n        const isLastLeftSticky = columnIsLastLeftSticky(header.id, headers);\n        if (isLastLeftSticky) {\n            // @ts-ignore\n            dataAttrs['data-sticky-last-left-td'] = true;\n        }\n        const isFirstRightSticky = columnIsFirstRightSticky(header.id, headers);\n        if (isFirstRightSticky) {\n            // @ts-ignore\n            dataAttrs['data-sticky-first-right-td'] = true;\n        }\n    }\n    return Object.assign({ style }, dataAttrs);\n}\nexports.useSticky = (hooks) => {\n    hooks.getHeaderProps.push((props, { instance, column }) => {\n        const nextProps = getStickyProps(column, instance);\n        return [props, nextProps];\n    });\n    hooks.getCellProps.push((props, { instance, cell }) => {\n        const nextProps = getStickyProps(cell.column, instance);\n        return [props, nextProps];\n    });\n};\nexports.useSticky.pluginName = 'useSticky';\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}