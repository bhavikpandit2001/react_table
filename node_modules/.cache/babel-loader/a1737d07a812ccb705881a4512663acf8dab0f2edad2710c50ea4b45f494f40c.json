{"ast":null,"code":"var _jsxFileName = \"/home/agilepc99/Desktop/tutorial/react_table/src/components/sortingTable.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useMemo } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { solid } from '@fortawesome/fontawesome-svg-core';\nimport { useTable, useSortBy } from \"react-table\";\nimport MOCK_DATA from \"./MOCK_DATA.json\";\nimport { COLUMNS } from \"./columns\";\nimport './basicTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SortingTable = () => {\n  _s();\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n  const tableInstance = useTable({\n    columns,\n    data\n  }, useSortBy);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children:\n      // Loop over the header rows\n      headerGroups.map(headerGroup =>\n      /*#__PURE__*/\n      // Apply the header row props\n      _jsxDEV(\"tr\", {\n        ...headerGroup.getHeaderGroupProps(),\n        children:\n        // Loop over the headers in each row\n        headerGroup.headers.map(column =>\n        /*#__PURE__*/\n        // Apply the header cell props\n        _jsxDEV(\"th\", {\n          ...column.getHeaderProps(column.getSortByToggleProps()),\n          children: [\n          // Render the header\n          column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: \"fa-solid fa-sort-down\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 94\n            }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: \"fa-solid fa-sort-up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 145\n            }, this) : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 37\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      ...getTableBodyProps(),\n      children:\n      // Loop over the table rows\n      rows.map(row => {\n        // Prepare the row for display\n        prepareRow(row);\n        return (\n          /*#__PURE__*/\n          // Apply the row props\n          _jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children:\n            // Loop over the rows cells\n            row.cells.map(cell => {\n              // Apply the cell props\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                children:\n                // Render the cell contents\n                cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)\n        );\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n      children: footerGroups.map(footerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n        ...footerGroup.getFooterGroupProps(),\n        children: footerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"td\", {\n          ...column.getFooterProps(),\n          children: column.render(\"Footer\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 37\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(SortingTable, \"pjBIPaRCpDJjOFbWNcaYNCnHqio=\", false, function () {\n  return [useTable];\n});\n_c = SortingTable;\nexport default SortingTable;\nvar _c;\n$RefreshReg$(_c, \"SortingTable\");","map":{"version":3,"names":["React","useMemo","FontAwesomeIcon","solid","useTable","useSortBy","MOCK_DATA","COLUMNS","SortingTable","columns","data","tableInstance","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","footerGroup","getFooterGroupProps","getFooterProps"],"sources":["/home/agilepc99/Desktop/tutorial/react_table/src/components/sortingTable.js"],"sourcesContent":["import React from \"react\";\nimport { useMemo } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { solid } from '@fortawesome/fontawesome-svg-core'\nimport { useTable,  useSortBy } from \"react-table\";\nimport MOCK_DATA from \"./MOCK_DATA.json\"\nimport { COLUMNS } from \"./columns\"\nimport './basicTable.css'\n\nconst SortingTable = () => {\n    const columns = useMemo(() => COLUMNS, [])\n    const data = useMemo(() => MOCK_DATA, [])\n\n    const tableInstance = useTable({\n        columns,\n        data\n    }, \n    useSortBy)\n    const { getTableProps, getTableBodyProps, headerGroups, footerGroups, rows, prepareRow } = tableInstance\n\n    return (\n        <table {...getTableProps()}>\n            <thead>\n                {// Loop over the header rows\n                    headerGroups.map(headerGroup => (\n                        // Apply the header row props\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {// Loop over the headers in each row\n                                headerGroup.headers.map(column => (\n                                    // Apply the header cell props\n                                    <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                                        {// Render the header\n                                            column.render('Header')}\n                                            <span>\n                                                {\n                                                    column.isSorted ? (column.isSortedDesc ? <FontAwesomeIcon icon=\"fa-solid fa-sort-down\" /> : <FontAwesomeIcon icon=\"fa-solid fa-sort-up\" />) : \"\"\n                                                }\n                                            </span>\n                                    </th>\n                                ))}\n                        </tr>\n                    ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {// Loop over the table rows\n                    rows.map(row => {\n                        // Prepare the row for display\n                        prepareRow(row)\n                        return (\n                            // Apply the row props\n                            <tr {...row.getRowProps()}>\n                                {// Loop over the rows cells\n                                    row.cells.map(cell => {\n                                        // Apply the cell props\n                                        return (\n                                            <td {...cell.getCellProps()}>\n                                                {// Render the cell contents\n                                                    cell.render('Cell')}\n                                            </td>\n                                        )\n                                    })}\n                            </tr>\n                        )\n                    })}\n            </tbody>\n            <tfoot>\n                {\n                    footerGroups.map(footerGroup => (\n                        <tr {...footerGroup.getFooterGroupProps()}>\n                            {\n                                footerGroup.headers.map(column => (\n                                    <td {...column.getFooterProps()}>\n                                        {\n                                            column.render(\"Footer\")\n                                        }\n                                    </td>\n                                ))\n                            }\n                        </tr>\n                    ))\n                }\n            </tfoot>\n        </table>\n    )\n}\nexport default SortingTable;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}