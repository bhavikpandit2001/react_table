{"ast":null,"code":"var _jsxFileName = \"/home/agilepc99/Desktop/tutorial/react_table/src/components/RowSelection.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useMemo } from \"react\";\nimport { useTable, useRowSelect } from \"react-table\";\nimport MOCK_DATA from \"./MOCK_DATA.json\";\nimport { COLUMNS } from \"./columns\";\nimport './basicTable.css';\nimport { Checkbox } from \"./Checkbox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RowSelection = () => {\n  _s();\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow,\n    selectedFlatRows\n  } = useTable({\n    columns,\n    data\n  }, useRowSelect, hooks => {\n    hooks.visibleColumns.push(columns => {\n      return [{\n        id: \"selection\",\n        Header: _ref => {\n          let {\n            getToggleAllRowsSelectedProps\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(Checkbox, {\n            ...getToggleAllRowsSelectedProps()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this);\n        }\n      }];\n    });\n  });\n  const firstPageRows = rows.slice(0, 10);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children:\n      // Loop over the header rows\n      headerGroups.map(headerGroup =>\n      /*#__PURE__*/\n      // Apply the header row props\n      _jsxDEV(\"tr\", {\n        ...headerGroup.getHeaderGroupProps(),\n        children:\n        // Loop over the headers in each row\n        headerGroup.headers.map(column =>\n        /*#__PURE__*/\n        // Apply the header cell props\n        _jsxDEV(\"th\", {\n          ...column.getHeaderProps(),\n          children:\n          // Render the header\n          column.render('Header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 37\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      ...getTableBodyProps(),\n      children:\n      // Loop over the table rows\n      firstPageRows.map(row => {\n        // Prepare the row for display\n        prepareRow(row);\n        return (\n          /*#__PURE__*/\n          // Apply the row props\n          _jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children:\n            // Loop over the rows cells\n            row.cells.map(cell => {\n              // Apply the cell props\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                children:\n                // Render the cell contents\n                cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)\n        );\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n      children: footerGroups.map(footerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n        ...footerGroup.getFooterGroupProps(),\n        children: footerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"td\", {\n          ...column.getFooterProps(),\n          children: column.render(\"Footer\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 37\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(RowSelection, \"MEUP6B0PSSlAWiweWBuo315Hfyw=\", false, function () {\n  return [useTable];\n});\n_c = RowSelection;\nexport default RowSelection;\nvar _c;\n$RefreshReg$(_c, \"RowSelection\");","map":{"version":3,"names":["React","useMemo","useTable","useRowSelect","MOCK_DATA","COLUMNS","Checkbox","RowSelection","columns","data","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","selectedFlatRows","hooks","visibleColumns","push","id","Header","getToggleAllRowsSelectedProps","firstPageRows","slice","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","footerGroup","getFooterGroupProps","getFooterProps"],"sources":["/home/agilepc99/Desktop/tutorial/react_table/src/components/RowSelection.js"],"sourcesContent":["import React from \"react\";\nimport { useMemo } from \"react\";\nimport { useTable, useRowSelect } from \"react-table\";\nimport MOCK_DATA from \"./MOCK_DATA.json\"\nimport { COLUMNS } from \"./columns\"\nimport './basicTable.css';\nimport { Checkbox } from \"./Checkbox\";\n\nconst RowSelection = () => {\n    const columns = useMemo(() => COLUMNS, [])\n    const data = useMemo(() => MOCK_DATA, [])\n\n    const { getTableProps,\n        getTableBodyProps, \n        headerGroups,\n        footerGroups, \n        rows, \n        prepareRow, \n        selectedFlatRows} = useTable\n        ({\n            columns,\n            data,\n        }, useRowSelect,\n        (hooks) =>{\n            hooks.visibleColumns.push((columns) =>{\n                return[\n                    {\n                        id: \"selection\",\n                        Header: ({getToggleAllRowsSelectedProps}) =>(\n                            <Checkbox {...getToggleAllRowsSelectedProps()}/>\n                        )\n                    }\n                ]\n            })\n        } )\n\n    const firstPageRows = rows.slice(0,10)\n\n    return (\n        <table {...getTableProps()}>\n            <thead>\n                {// Loop over the header rows\n                    headerGroups.map(headerGroup => (\n                        // Apply the header row props\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {// Loop over the headers in each row\n                                headerGroup.headers.map(column => (\n                                    // Apply the header cell props\n                                    <th {...column.getHeaderProps()}>\n                                        {// Render the header\n                                            column.render('Header')}\n                                    </th>\n                                ))}\n                        </tr>\n                    ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {// Loop over the table rows\n                    firstPageRows.map(row => {\n                        // Prepare the row for display\n                        prepareRow(row)\n                        return (\n                            // Apply the row props\n                            <tr {...row.getRowProps()}>\n                                {// Loop over the rows cells\n                                    row.cells.map(cell => {\n                                        // Apply the cell props\n                                        return (\n                                            <td {...cell.getCellProps()}>\n                                                {// Render the cell contents\n                                                    cell.render('Cell')}\n                                            </td>\n                                        )})}\n                            </tr>\n                        )})}\n            </tbody>\n            <tfoot>\n                {\n                    footerGroups.map(footerGroup => (\n                        <tr {...footerGroup.getFooterGroupProps()}>\n                            {\n                                footerGroup.headers.map(column =>(\n                                    <td {...column.getFooterProps()}>\n                                        {\n                                            column.render(\"Footer\")\n                                        }\n                                    </td>\n                                ))\n                            }\n                        </tr>\n                    ))\n                }\n            </tfoot>\n        </table>\n    )\n}\nexport default RowSelection;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}